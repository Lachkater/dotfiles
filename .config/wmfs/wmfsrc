# vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:ft=sh:

[misc]
        font               = "envy code r:size=8"
        raisefocus         = false
        focus_follow_mouse = false
        focus_pointer_click = true
        status_timing      = 5     #seconds
		status_path		   = "/home/ramonoid/Scripts/wmfstatus.sh"
[/misc]

[bar]
        bg     = "#1f1f1f"
        fg     = "#D4D4D4"
        border = false

        [selbar]
               bg = "#191919"
               fg = "#D4D4ff"
               # Cut title length
               # max_length = 25
        [/selbar]
[/bar]

[layouts]
        fg = "#191919"
        bg = "#111111"

        # Border around the layout button.
        border = false 

        # Value menu or switch.
        system = "switch"

        # Value left or right.
        placement = "left"

        # Keep layout geo for free layout
        keep_layout_geo = false

        # Width of layout button
        layout_button_width = 12

        # Tiling layouts.
        [layout] type = "tile_right"         symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/tile_right.png]\"    [/layout]
        [layout] type = "tile_left"          symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/tile_left.png]\"     [/layout]
        [layout] type = "tile_top"           symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/tile_top.png]\"      [/layout]
        [layout] type = "tile_bottom"        symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/tile_bottom.png]\"   [/layout]
        [layout] type = "tile_grid"          symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/tile_grid.png]\"     [/layout]
        [layout] type = "tile_grid_vertical" symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/tile_grid_v.png]\"   [/layout]

        # Other layouts.
        [layout] type = "max"   symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/max.png]\"  	 [/layout]
        [layout] type = "free"  symbol = "\i[0;0;14;14;/home/ramonoid/.wmfsicons/layouts/floating.png]\" [/layout]

[/layouts]

[tags]
        [default_tag]
             name             = "1"
             mwfact           = 0.5
             nmaster          = 1
             layout           = "tile_right"
             resizehint       = false
             infobar_position = "top"
        [/default_tag]

        tag_round      = false
        tag_auto_prev  = true
        occupied_bg    = "#a5c1d4" # color del fondo de los clientes ocupados
        occupied_fg    = "#b3b3b3"
        sel_fg         = "#cfcccc" # color del texto del cliente actual
        sel_bg         = "#f81e5c" # color del fondo del cliente actual
        urgent_bg      = "#d9ab70f"
        urgent_fg      = "#000000"
        # If true, number of the tag will be used for name
        name_count     = false

        # Border around the tag buttons.
        border      = false

        # Hide empty tags in tag list
        autohide    = false

        # clients option is *DEPRECATED* but works, see [rules] section
        [tag] name = "\i[2;3;10;10;/home/ramonoid/.wmfsicons/tags/term.png]\ "  [/tag]
        [tag] name = "\i[2;3;10;10;/home/ramonoid/.wmfsicons/tags/browser.png]\ "  clients = {"Browser"} [/tag]
		[tag] name = "\i[2;3;10;10;/home/ramonoid/.wmfsicons/tags/mail.png]\ "  screen = 0 layout = "tile_right" [/tag] 
        [tag] name = "\i[2;3;10;10;/home/ramonoid/.wmfsicons/tags/graphics.png]\ "  screen = 0 layout = "free"  [/tag]
        [tag] name = "\i[2;3;10;10;/home/ramonoid/.wmfsicons/tags/plug.png]\ "  [/tag]
        [tag] name = "\i[2;3;10;10;/home/ramonoid/.wmfsicons/tags/phones.png]\ "  [/tag]
[/tags]

[client]
        client_round         = true
        border_height        = 3
        border_shadow        = false
        border_normal        = "#191919"
        border_focus         = "#dc566d"
        resize_corner_normal = "#191919"
        resize_corner_focus  = "#dc566d"

        # Space between tiled clients
        padding = 5

        [mouse] button = "1" func = "client_raise" [/mouse]
        [mouse] button = "1" func = "mouse_move"   [/mouse]
        [mouse] button = "3" func = "mouse_resize" [/mouse]

        # Modifier for mouse use
        modifier = "Mod4"

[/client]

[rules]
			   [rule] instance = "opera" 		class = "opera" 		screen = 0     tag = "2"  max =  "false"  [/rule]
			   [rule] instance = "uzbl-tabbed" 	class = "uzbl-tabbed" 	screen = 0     tag = "2"  max =  "false"  [/rule]
			   [rule] instance = "emesene" 		class = "emesene"	 	screen = 0     tag = "3"  max =  "false"  free = "false"  [/rule]
			   [rule] instance = "gimp"  		class = "gimp"  		screen = 0     tag = "4"  max =  "false"  free = "true"  [/rule]
			   [rule] instance = "hydrogen" 	class = "hydrogen"  	screen = 0     tag = "5"  max =  "false"  [/rule]
			   [rule] instance = "ardour2" 		class = "ardour2"  		screen = 0     tag = "6"  max =  "false"  free = "true"  [/rule]
               [rule] instance = "easytag"      class = "easytag"       screen = 0     tag = "5"  max =  "false"  free = "false"  [/rule]
[/rules]

[launcher]
        [set_launcher]
                # Limit size of the launcher window (px)
                width_limit = 300

                name = "launcher_exec"
                prompt = "Exec: "
                command = "exec"
        [/set_launcher]
[/launcher]

[keys]
         # Reload the configuration of wmfs.
        [key] mod = {"Mod4", "Control"} key = "r" func = "reload" [/key]

        # Open a terminal.
        [key] mod = {"Control"} key = "Return" func = "spawn" cmd = "urxvtc -uc" [/key]

        # Kill the selected client.
        [key] mod = {"Mod4"} key = "q" func = "client_kill" [/key]

        # Quit wmfs.
        [key] mod = {"Control", "Mod4", "Shift"} key = "q" func = "quit" [/key]

        # Swap current client with the next.
        [key] mod = {"Mod4"} key = "t" func = "client_swap_next" [/key]

        # Swap current client with the previous.
        [key] mod = {"Mod4", "Shift"} key = "t" func = "client_swap_prev" [/key]

        # Toggle maximum the selected client
        [key] mod = {"Mod4"} key = "m" func = "toggle_max" [/key]

        # Toggle free the selected client.
        [key] mod = {"Mod4"} key = "f" func = "toggle_free" [/key]

        # Toggle the position of the infobar.
        [key] mod = {"Mod4"} key = "b" func = "toggle_infobar_position" [/key]

        # Toggle the resizehint of the current tag/screen
        [key] mod = {"Shift", "Control"} key = "r" func = "toggle_resizehint" [/key]

        # Toggle the tag_autohide mode
        [key] mod = {"Shift", "Control"} key = "t" func = "toggle_tagautohide" [/key]

        # Select the next client.
        [key] mod = {"Mod4"} key = "Tab" func = "client_next" [/key]

        # Select the previous client.
        [key] mod = {"Mod4","Shift"} key = "Tab" func = "client_prev" [/key]

        # Select the next visible tag.
        [key] mod = {"Control","Mod4"} key = "Right" func = "tag_next_visible" [/key]

        # Select the previous visible tag.
        [key] mod = {"Control","Mod4"} key = "Left" func = "tag_prev_visible" [/key]

        # Set the next layout.
        [key] mod = {"Mod4"} key = "space" func = "layout_next" [/key]

        # Set the previous layout.
        [key] mod = {"Mod4", "Shift"} key = "space" func = "layout_prev" [/key]

        # Increase mwfact.
        [key] mod = {"Mod4"} key = "l" func = "set_mwfact" cmd = "+0.025" [/key]

        # Decrease mwfact.
        [key] mod = {"Mod4"} key = "h" func = "set_mwfact" cmd = "-0.025" [/key]

        # Increase nmaster.
        [key] mod = {"Mod4"} key = "d" func = "set_nmaster" cmd = "+1" [/key]

        # Decease nmaster.
        [key] mod = {"Mod4", "Shift"} key = "d" func = "set_nmaster" cmd = "-1" [/key]

        #Launcher.
        [key] mod = {"Mod4"} key = "p" func = "launcher" cmd = "launcher_exec" [/key]

        #ViWMFS
        [key] mod = {"Mod4"} key = "Escape" func = "launcher" cmd = "viwmfs" [/key]

        # Set the tag x.
        [key] mod = {"Mod4"} key = "1" func = "tag" cmd = "1" [/key]
        [key] mod = {"Mod4"} key = "2" func = "tag" cmd = "2" [/key]
        [key] mod = {"Mod4"} key = "3" func = "tag" cmd = "3" [/key]
        [key] mod = {"Mod4"} key = "4" func = "tag" cmd = "4" [/key]
        [key] mod = {"Mod4"} key = "5" func = "tag" cmd = "5" [/key]
        [key] mod = {"Mod4"} key = "6" func = "tag" cmd = "6" [/key]

		# Volume 
		[key] key = "0x1008ff13" func = "spawn" cmd = "amixer -q set Master 4+ unmute && wmfs -S" [/key]
		[key] key = "0x1008ff11" func = "spawn" cmd = "amixer -q set Master 4- unmute && wmfs -S" [/key]
		[key] key = "0x1008ff12" func = "spawn" cmd = "amixer -q set Master toggle    && wmfs -S" [/key]
		
		# MPD
		[key] key = "0x1008ff14" func = "spawn" cmd = "ncmpcpp toggle && wmfs -S" [/key]
		[key] key = "0x1008ff15" func = "spawn" cmd = "ncmpcpp stop   && wmfs -S" [/key]
		[key] key = "0x1008ff16" func = "spawn" cmd = "ncmpcpp prev   && wmfs -S" [/key]
		[key] key = "0x1008ff17" func = "spawn" cmd = "ncmpcpp next   && wmfs -S" [/key]

		# Screenshot
		[key] key = "0xff61"	func = "spawn" cmd = "scrot --quality 100 '%d-%m-%Y_$wx$h.png' -e 'mv $f ~/Imagenes' && wmfs -S" [/key]
		
		# Power
		[key] mod = {"Mod4", "Shift"}  key = "h" func = "spawn" cmd = "sudo shutdown -h now && wmfs -S" [/key]
		[key] mod = {"Mod4", "Shift"}  key = "r" func = "spawn" cmd = "sudo shutdown -r now && wmfs -S" [/key]

[/keys]
